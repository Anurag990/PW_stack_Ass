package Stack;import java.util.*;public class ques4 {    public static int[] asteroidCollision(int[] asteroids) {        Stack<Integer> stack = new Stack<>();        for (int asteroid : asteroids) {            if (stack.isEmpty() || asteroid > 0) {                // Asteroid is moving to the right or the stack is empty                stack.push(asteroid);            } else {                // Asteroid is moving to the left                while (!stack.isEmpty() && stack.peek() > 0) {                    // Check for collisions                    if (Math.abs(asteroid) > stack.peek()) {                        stack.pop();                    } else if (Math.abs(asteroid) == stack.peek()) {                        stack.pop();                        // Break to avoid pushing the current asteroid onto the stack                        break;                    } else {                        // Break to avoid pushing the current asteroid onto the stack                        break;                    }                }                if (stack.isEmpty() || stack.peek() < 0) {                    // If stack is empty or top of the stack is also moving to the left                    stack.push(asteroid);                }            }        }        // Convert the stack to an array        int[] result = new int[stack.size()];        for (int i = result.length - 1; i >= 0; i--) {            result[i] = stack.pop();        }        return result;    }    public static void main(String[] args) {        int[] asteroids = {5, 10, -5};        int[] result = asteroidCollision(asteroids);        System.out.print("Remaining asteroids after collisions: ");        for (int asteroid : result) {            System.out.print(asteroid + " ");        }    }}